import telebot
import requests
import codecs
import json
from telebot import types

def getCategoryFunc(category):
	if category == "cat1":
		url = "http://my.rest.api/posts"
		drug_list = requests.get(url)
		return json.dumps(drug_list.json(), ensure_ascii = False)
	if category == "cat2":
		return "–ü–æ–∫–∞ –Ω–∏–∑—è"
	if category == "cat3":
		return "–ï—â—ë –Ω–µ –≥–æ—Ç–æ–≤–æ"



bot = telebot.TeleBot('1443865969:AAGgoDOGnW7q2j1WGprdLP0gR6trtWNLyoA');

@bot.message_handler(commands=['start'])
def welcome(message):
	# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
	markup1 = types.ReplyKeyboardMarkup(resize_keyboard = True)
	item11 = types.KeyboardButton('–ü–æ–∏—Å–∫ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞üíä')
	item12 = types.KeyboardButton('–ü–æ–∏—Å–∫ –∞–ø—Ç–µ–∫–∏üöë')
	item13 = types.KeyboardButton('–ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞üõí')

	markup1.add(item11, item12)
	markup1.add(item13)

	bot.send_photo(message.from_user.id, "https://www.prikol.ru/wp-content/gallery/october-2019/prikol-25102019-001.jpg", reply_markup = markup1)


@bot.message_handler(content_types=['text'])
def other_windows(message):
	markup2 = types.ReplyKeyboardMarkup(resize_keyboard = True)
	item21 = types.KeyboardButton('–í –Ω–∞—á–∞–ª–æ‚óÄ')
	markup2.add(item21)

	# –í–µ—Ç–∫–∞ "–ø–æ–∏—Å–∫ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞"
	if message.text == '–ü–æ–∏—Å–∫ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞üíä':
		bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ –≤–∞—Å —Ç–æ–≤–∞—Ä–∞:')
		bot.register_next_step_handler(message, set_product)
		
	# –í–µ—Ç–∫–∞ "–ø–æ–∏—Å–∫ –∞–ø—Ç–µ–∫–∏"
	elif message.text == '–ü–æ–∏—Å–∫ –∞–ø—Ç–µ–∫–∏üöë':
		bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å (–≥–æ—Ä–æ–¥, —É–ª–∏—Ü–∞):')
		bot.register_next_step_handler(message, set_adress)
		
	# –í–µ—Ç–∫–∞ "–º–æ—è –∫–æ—Ä–∑–∏–Ω–∞"
	elif message.text == '–ú–æ—è –∫–æ—Ä–∑–∏–Ω–∞üõí':
		bot.send_message(message.from_user.id, '–í –≤–∞—à–µ–π –∫–æ—Ä–∑–∏–Ω–µüõí:\n\n' + '‚Ññ|–ù–∞–∑–≤–∞–Ω–∏–µ|–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å|–ê–ø—Ç–µ–∫–∞|–¶–µ–Ω–∞', reply_markup = markup2)
		
	# –ö–Ω–æ–ø–∫–∞ "–≤ –Ω–∞—á–∞–ª–æ"
	elif message.text == '–í –Ω–∞—á–∞–ª–æ‚óÄ':
		return welcome(message)
		
	# –û—Å—Ç–∞–ª—å–Ω–æ–µ
	else:
		bot.send_message(message.from_user.id, "–Ø –Ω–µ  –ø–æ–Ω–∏–º–∞—é üò¢")


def set_adress(message):
	markup3 = types.InlineKeyboardMarkup()
	item31 = types.InlineKeyboardButton('–î–∞', callback_data = 'yes')
	item32 = types.InlineKeyboardButton('–ù–µ—Ç', callback_data = 'no_adress')

	markup3.add(item31)
	markup3.add(item32)

	bot.send_message(message.from_user.id, '–í—ã –≤–≤–µ–ª–∏: ' + message.text + '\n–î–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã?', reply_markup = markup3)


def set_product(message):
	markup4 = types.InlineKeyboardMarkup()
	item41 = types.InlineKeyboardButton('–î–∞', callback_data = 'yes')
	item42 = types.InlineKeyboardButton('–ù–µ—Ç', callback_data = 'no_product')

	markup4.add(item41)
	markup4.add(item42)

	bot.send_message(message.from_user.id, '–í—ã –≤–≤–µ–ª–∏: ' + message.text + '\n–î–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã?', reply_markup = markup4)



@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
	if call.data == 'yes':
		bot.send_message(call.message.chat.id, '–ó–∞–ø–æ–º–Ω—é : )');
	elif call.data == 'no_adress':
		# –æ—Ç–≤–µ—Ç
		pass
	elif call.data == 'no_product':
		# –æ—Ç–≤–µ—Ç
		pass


bot.polling(none_stop=True, interval=0)
